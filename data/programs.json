[
    {
      "id": 1,
      "years":[2014],
      "img": "1.jpg",
      "name": "A sequence of fibonacci strings is generated as follows:\\nS0=\"a\", S1=\"b\", Sn=S(n-1)+S(n-2)\\nwhere + denotes concatenation. Thus the sequence is:\\n a, b, ba, bab, babba, babbabab, ..., n terms.\\nDesign a class FiboString to generate fibonacci strings.",
      "solution": "data/programSolutions/1.txt"
    },
    {
      "id": 2,
      "years":[2023],
      "img": "2.png",
      "name": "Design a class NumDude to check if a given number is a Dudeney number or not. (A Dudeney number is a postive integer that is a perfect cube, such that the sum of its digits is equal to the cube root of the nubmer.)\\nExample: 5832 = (5+8+3+2)³ = (18)³ = 5832",
      "solution": "data/programSolutions/2.txt"
    },
    {
      "id": 3,
      "years":[2023],
      "img": "3.png",
      "name": "A class Trans is defined to find the transpose of a square matrix. A transpose of a matrix is obtained by interchanging the elements of the rows and columns.",
      "solution": "data/programSolutions/3.txt"
    },
    {
      "id": 4,
      "years":[2013],
      "img": "4.jpg",
      "name": "A class Exchange accepts a sentence and interchange the first alphabet with the last alphabet for each word in the sentence, with single letter the word remains unchanged. The words in the input sentece are separed by a single blank space and terminated by a full stop.",
      "solution": "data/programSolutions/4.txt"
    },
    {
      "id": 5,
      "years":[2008],
      "img": "5.jpg",
      "name": "A class Revstr defines a recursive function to reverse a string and check whether it is a palindrome or not.",
      "solution": "data/programSolutions/5.txt"
    },
    {
      "id": 6,
      "years":[],
      "img": "6.jpg",
      "name": "Desing a class MidDigit to find the middle digit number. The middle digit number of a number is the one which is exactly in the mid of a given number.",
      "solution": "data/programSolutions/6.txt"
    },
    {
      "id": 7,
      "years":[],
      "img": "7.png",
      "name": "Write a program to print all circular prime numbers from m to n.",
      "solution": "data/programSolutions/7.txt"
    },
    {
      "id": 8,
      "years":[],
      "img": "8.png",
      "name": "Write a program to add two binary numbers.",
      "solution": "data/programSolutions/8.txt"
    },
    {
      "id": 9,
      "years":[],
      "img": "9.png",
      "name": "Write a program to accept an even integer and print all odd prime pairs whose sum is equal to n. (GoldBach Number)",
      "solution": "data/programSolutions/9.txt"
    },
    {
      "id": 10,
      "years":[],
      "img": "10.jpg",
      "name": "Design a class ArrMix to arrange two single dimensional arrays into one single dimensional array, such that the perfect sqares from both the arrays are at the beginning followed by the non square numbers.",
      "solution": "data/programSolutions/10.txt"
    },
    {
      "id": 11,
      "years":[],
      "img": "11.jpg",
      "name": "Write a program to find the factorial of a number using recursive technique.\\nThe Following is the process of finding factorial of a number: \\nn! = n * (n-1) * (n-2) * ... * 1",
      "solution": "data/programSolutions/11.txt"
    },
    {
      "id": 12,
      "years":[],
      "img": "12.jpg",
      "name": "Write a class poweris to raise number n to the power m using recursive technique.\\nn = 2, m = 3. n^m = 2^3 = 8",
      "solution": "data/programSolutions/12.txt"
    },{
      "id": 13,
      "years":[],
      "img": "13.jpg",
      "name": "Define a class Change to convert the case of the characters in it using recursive technique.",
      "solution": "data/programSolutions/13.txt"
    },{
      "id": 14,
      "years":[2015],
      "img": "14.jpg",
      "name": "A class Admission contains admission numbers of 100 students that are already arranged in Ascending order. Write a program to search a particular admission number using recursive technique and return 1 if found otherwise return -1",
      "solution": "data/programSolutions/14.txt"
    },{
      "id": 15,
      "years":[2015],
      "img": "15.jpg",
      "name": "A class Merger concatenates two positive integers that are greater than 0 and produces a new merged integer.\\nExample: If the first number is 23 and the second number is 764, then the concatenated number will be 23764.",
      "solution": "data/programSolutions/15.txt"
    },{
      "id": 16,
      "years":[],
      "img": "16.jpg",
      "name": "Design a class Prime_Factors to accept an array and display the prime factors of each number in the array.",
      "solution": "data/programSolutions/16.txt"
    }
    ,{
      "id": 17,
      "years":[],
      "img": "17.png",
      "name": "Design a class to accept three characters and store them in the matrix. \\nFirst Character: 4 corners\\nSecond Character: Boundary Elements except those corners\\nThird Character: Remaining Elements",
      "solution": "data/programSolutions/17.txt"
    },{
      "id": 18,
      "years":[],
      "img": "18.jpg",
      "name": "Write a program to compute and store the sum of elements of each row and sum of elements of each column in their respective row and column in the matrix.",
      "solution": "data/programSolutions/18.txt"
    },{
      "id": 19,
      "years":[2015],
      "img": "19.jpg",
      "name": "Write a program to accept a matrix from the user and rotate it 90° clockwise. Display the original as well as the rotated matrix. Also display the sum of the corner elements.",
      "solution": "data/programSolutions/19.txt"
    },{
      "id": 20,
      "years":[2012],
      "img": "20.jpg",
      "name": "Write a program to accept two numbers m and n and print all the prime palindromes number between m and n. Also print the frequency of prime palindromes.",
      "solution": "data/programSolutions/20.txt"
    },{
      "id": 21,
      "years":[],
      "img": "21.png",
      "name": "A class Composite contains a two dimensional array of order [m × n]. The maxium values possible for both 'm' and 'n' is 20. Disign a class Composite to fill the array with the first (m × n) composite numbers in column wise.",
      "solution": "data/programSolutions/21.txt"
    },{
      "id": 22,
      "years":[],
      "img": null,
      "name": "Create a class VampireNumber to display all the vampire numbers between 1 and 10000. A number is a vampire number is a composite Natural Number with even number of digits and can be factored into two integers with half of the digits of the original number and not both with trailing zeroes. The original number should contain all the digits from both the factors.",
      "solution": "data/programSolutions/22.txt"
    },{
      "id": 23,
      "years":[],
      "img": null,
      "name": "Write a program to accept a matrix and print the saddle points present in the matrix. It is an element which is largest in its column and smallest in its row.",
      "solution": "data/programSolutions/23.txt"
    },{
      "id": 24,
      "years":[],
      "img": null,
      "name": "Write a program to check is a sentence is a SnowBall sentence or not.\\nA snowball sentence is a sentence in which each succeeding word’s size increase by 1 only.\\nExample: Hello world – not a snowball sentence\\nI am the lord – snowball sentence",
      "solution": "data/programSolutions/24.txt"
    },{
      "id": 25,
      "years":[],
      "img": null,
      "name": "Design a class to generate a spiral matrix of natural numbers starting from 1 to n.",
      "solution": "data/programSolutions/25.txt"
    },{
      "id": 26,
      "years":[],
      "img": null,
      "name": "Write a program to check if the given square matrix is doubly markov matrix or not. A doubly markov matrix is the one which satisfies the following conditions:\\n(i)All elements are greater than or equal to 0.\\n(ii) Sum of each row is equal to 1.\\n(iii) Sum of each column is equal to 1.",
      "solution": "data/programSolutions/26.txt"
    },{
      "id": 27,
      "years":[],
      "img": null,
      "name": "Write a program to accept day number (between 1 and 366) and year (yyyy) from the user and display the corresponding date. Also accept 'N' from the user where (1<=N<=100) to compute and display the future date 'N' days after the given date. Display error message if the value of the day number or 'N' are not within the limit. Day number is calculated using 1st January of the given year as 1.",
      "solution": "data/programSolutions/27.txt"
    },{
      "id": 28,
      "years":[],
      "img": null,
      "name": "Write a program to accept any posite integer and check if it is a Hamming number or not. Hamming numbers are positive integer numbers whose prime factors include 2, 3 and 5 only.",
      "solution": "data/programSolutions/28.txt"
    }
  ]
  
