[
    {
      "id": 1,
      "years":[2014],
      "img": "1.jpg",
      "name": "A sequence of fibonacci strings is generated as follows:\\nS0=\"a\", S1=\"b\", Sn=S(n-1)+S(n-2)\\nwhere + denotes concatenation. Thus the sequence is:\\n a, b, ba, bab, babba, babbabab, ..., n terms.\\nDesign a class FiboString to generate fibonacci strings.",
      "solution": "data/programSolutions/1.txt"
    },
    {
      "id": 2,
      "years":[2023],
      "img": "2.png",
      "name": "Design a class NumDude to check if a given number is a Dudeney number or not. (A Dudeney number is a postive integer that is a perfect cube, such that the sum of its digits is equal to the cube root of the nubmer.)\\nExample: 5832 = (5+8+3+2)³ = (18)³ = 5832",
      "solution": "data/programSolutions/2.txt"
    },
    {
      "id": 3,
      "years":[2023],
      "img": "3.png",
      "name": "A class Trans is defined to find the transpose of a square matrix. A transpose of a matrix is obtained by interchanging the elements of the rows and columns.",
      "solution": "data/programSolutions/3.txt"
    },
    {
      "id": 4,
      "years":[2013],
      "img": "4.jpg",
      "name": "A class Exchange accepts a sentence and interchange the first alphabet with the last alphabet for each word in the sentence, with single letter the word remains unchanged. The words in the input sentece are separed by a single blank space and terminated by a full stop.",
      "solution": "data/programSolutions/4.txt"
    },
    {
      "id": 5,
      "years":[2008],
      "img": "5.jpg",
      "name": "A class Revstr defines a recursive function to reverse a string and check whether it is a palindrome or not.",
      "solution": "data/programSolutions/5.txt"
    },
    {
      "id": 6,
      "years":[],
      "img": "6.jpg",
      "name": "Desing a class MidDigit to find the middle digit number. The middle digit number of a number is the one which is exactly in the mid of a given number.",
      "solution": "data/programSolutions/6.txt"
    },
    {
      "id": 7,
      "years":[],
      "img": "7.png",
      "name": "Write a program to print all circular prime numbers from m to n.",
      "solution": "data/programSolutions/7.txt"
    },
    {
      "id": 8,
      "years":[],
      "img": "8.png",
      "name": "Write a program to add two binary numbers.",
      "solution": "data/programSolutions/8.txt"
    },
    {
      "id": 9,
      "years":[],
      "img": "9.png",
      "name": "Write a program to accept an even integer and print all odd prime pairs whose sum is equal to n. (GoldBach Number)",
      "solution": "data/programSolutions/9.txt"
    },
    {
      "id": 10,
      "years":[],
      "img": "10.jpg",
      "name": "Design a class ArrMix to arrange two single dimensional arrays into one single dimensional array, such that the perfect sqares from both the arrays are at the beginning followed by the non square numbers.",
      "solution": "data/programSolutions/10.txt"
    },
    {
      "id": 11,
      "years":[],
      "img": "11.jpg",
      "name": "Write a program to find the factorial of a number using recursive technique.\\nThe Following is the process of finding factorial of a number: \\nn! = n * (n-1) * (n-2) * ... * 1",
      "solution": "data/programSolutions/11.txt"
    },
    {
      "id": 12,
      "years":[],
      "img": "12.jpg",
      "name": "Write a class poweris to raise number n to the power m using recursive technique.\\nn = 2, m = 3. n^m = 2^3 = 8",
      "solution": "data/programSolutions/12.txt"
    },{
      "id": 13,
      "years":[],
      "img": "13.jpg",
      "name": "Define a class Change to convert the case of the characters in it using recursive technique.",
      "solution": "data/programSolutions/13.txt"
    },{
      "id": 14,
      "years":[2015],
      "img": "14.jpg",
      "name": "A class Admission contains admission numbers of 100 students that are already arranged in Ascending order. Write a program to search a particular admission number using recursive technique and return 1 if found otherwise return -1",
      "solution": "data/programSolutions/14.txt"
    }
  ]
  
